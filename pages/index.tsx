// import { useRef, useEffect, RefObject } from 'react';
import type { NextPage, GetStaticProps, InferGetStaticPropsType } from 'next';
import dynamic from 'next/dynamic';
import Head from 'next/head';

// import { request, query } from 'lib/datocms';
// Hooks
import { Store } from '@Hooks/useStore';

import Navigation from '@Components/navigation';
import HeroSection from '@Components/hero-section';
const HowWeWork = dynamic(() => import('@Components/how-we-work'));
const WhatWeOffer = dynamic(() => import('@Components/what-we-offer'));
const OurLittleStory = dynamic(() => import('@Components/our-little-story'));
const GetInTouch = dynamic(() => import('@Components/get-in-touch'));
const Footer = dynamic(() => import('@Components/footer'));

const Home: NextPage = ({
  data,
  language,
  languages,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  // const target = useRef<HTMLElement | null>(null);

  // useEffect(() => {
  //   const element = target.current;

  //   const options = {
  //     root: null,
  //     rootMarign: '0px',
  //     threshold: 1.0,
  //   };

  //   const callback = (
  //     entries: IntersectionObserverEntry[]
  //     // observer: IntersectionObserver
  //   ) => {
  //     entries.forEach(el => {
  //       const animatedNode = el.target.querySelectorAll('.animated');
  //       animatedNode[0].classList.add('transition');
  //       console.log(animatedNode);
  //     });
  //   };
  //   const observer = new IntersectionObserver(callback, options);

  //   if (!element) return;

  //   observer.observe(element);
  //   return () => observer.unobserve(element);
  // }, []);

  // const options = useMemo(() => {
  //   return {
  //     root: null,
  //     rootMarign: '0px',
  //     threshold: 1.0,
  //   };
  // }, []);

  // observer.observe();

  // console.log(data, language, languages);
  if (!data) {
    return <main>Sorry! This page not found.</main>;
  }
  return (
    <Store.Provider value={{ language, languages, data }}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <Navigation />
      <main>
        <HeroSection />
        <HowWeWork />
        <WhatWeOffer />
        <OurLittleStory />
        <GetInTouch />
      </main>
      <Footer />
    </Store.Provider>
  );
};

export default Home;

export const getStaticProps: GetStaticProps = async context => {
  // const data = await request({ query, variables: { locale: context.locale } });

  return {
    props: {
      data,
      language: context.locale,
      languages: context.locales,
    },
  };
};

const data = {
  en: 'welcome',
  ru: 'добро пожаловать',
  fi: 'terve tuloa',
};
